/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: cYtFYdVtykXpyPSmJwBtNk
// Component: OFtkLZGGIYrt

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";

import { useScreenVariants as useScreenVariantsrbjbd6IxmKjb } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: rbjbd6IxmKJB/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: cYtFYdVtykXpyPSmJwBtNk/projectcss
import sty from "./PlasmicPolitikaPrivatnosti.module.css"; // plasmic-import: OFtkLZGGIYrt/css

import Call24DpE8EaedFill1Wght400Grad0Opsz24SvgIcon from "./icons/PlasmicIcon__Call24DpE8EaedFill1Wght400Grad0Opsz24Svg"; // plasmic-import: QlL3tTqfAw4N/icon
import Mail24DpE8EaedFill1Wght400Grad0Opsz24SvgIcon from "./icons/PlasmicIcon__Mail24DpE8EaedFill1Wght400Grad0Opsz24Svg"; // plasmic-import: RS4xpgiJxFif/icon
import Instagram3SvgIcon from "./icons/PlasmicIcon__Instagram3Svg"; // plasmic-import: FenFes5YFI20/icon
import TiktokSvgIcon from "./icons/PlasmicIcon__TiktokSvg"; // plasmic-import: TIFQAripOqvN/icon
import Facebook3SvgIcon from "./icons/PlasmicIcon__Facebook3Svg"; // plasmic-import: RJ2yhi0BbV-9/icon

createPlasmicElementProxy;

export type PlasmicPolitikaPrivatnosti__VariantMembers = {};
export type PlasmicPolitikaPrivatnosti__VariantsArgs = {};
type VariantPropType = keyof PlasmicPolitikaPrivatnosti__VariantsArgs;
export const PlasmicPolitikaPrivatnosti__VariantProps =
  new Array<VariantPropType>();

export type PlasmicPolitikaPrivatnosti__ArgsType = {};
type ArgPropType = keyof PlasmicPolitikaPrivatnosti__ArgsType;
export const PlasmicPolitikaPrivatnosti__ArgProps = new Array<ArgPropType>();

export type PlasmicPolitikaPrivatnosti__OverridesType = {
  root?: Flex__<"div">;
  navigacija?: Flex__<typeof NavigationBar>;
  izaberiteTemuVaseCarobneZabave?: Flex__<"section">;
  h2?: Flex__<"h2">;
  footer?: Flex__<"section">;
  impressum?: Flex__<"a"> & Partial<LinkProps>;
  politikaPrivatnosti?: Flex__<"a"> & Partial<LinkProps>;
  freeBox?: Flex__<"div">;
  section?: Flex__<"section">;
};

export interface DefaultPolitikaPrivatnostiProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPolitikaPrivatnosti__RenderFunc(props: {
  variants: PlasmicPolitikaPrivatnosti__VariantsArgs;
  args: PlasmicPolitikaPrivatnosti__ArgsType;
  overrides: PlasmicPolitikaPrivatnosti__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsrbjbd6IxmKjb()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />

        <meta
          key="og:image"
          property="og:image"
          content={PlasmicPolitikaPrivatnosti.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicPolitikaPrivatnosti.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <NavigationBar
            data-plasmic-name={"navigacija"}
            data-plasmic-override={overrides.navigacija}
            brand={
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__rbHxx
                )}
                component={Link}
                href={`/`}
                platform={"nextjs"}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__znIoG)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "70px"
                      : "90px"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  src={{
                    src: "/plasmic/princess_maddy/images/princessMaddyLogoPng.png",
                    fullWidth: 1459,
                    fullHeight: 875,
                    aspectRatio: undefined
                  }}
                />
              </PlasmicLink__>
            }
            className={classNames("__wab_instance", sty.navigacija)}
            closeButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__ktut)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={"https://static1.plasmic.app/close.svg"}
              />
            }
            itemsGap={8}
            menuItems={
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link__tUxtv
                )}
                component={Link}
                href={`/`}
                platform={"nextjs"}
              >
                {"Naslovnica"}
              </PlasmicLink__>
            }
            openButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__i3Yxb)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobile")
                    ? "40px"
                    : "auto"
                }
                src={"https://static1.plasmic.app/menu.svg"}
              />
            }
            responsiveBreakpoint={768}
          />

          <section
            data-plasmic-name={"izaberiteTemuVaseCarobneZabave"}
            data-plasmic-override={overrides.izaberiteTemuVaseCarobneZabave}
            className={classNames(
              projectcss.all,
              sty.izaberiteTemuVaseCarobneZabave
            )}
          >
            <h2
              data-plasmic-name={"h2"}
              data-plasmic-override={overrides.h2}
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2
              )}
            >
              {"Politika privatnosti"}
            </h2>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rehkT
              )}
            >
              {
                'Firefly, obrt za savjetovanje u poslovanju ("mi", "nas", "na\u0161") po\u0161tuje va\u0161u privatnost i obvezuje se \u0161tititi va\u0161e osobne podatke.'
              }
            </div>
            <h5
              className={classNames(
                projectcss.all,
                projectcss.h5,
                projectcss.__wab_text,
                sty.h5__sxqwd
              )}
            >
              {"Koje podatke prikupljamo"}
            </h5>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ymIv
              )}
            >
              {
                "Prikupljamo samo podatke koje nam dobrovoljno date putem kontakt forme, kao \u0161to su ime i prezime, e-mail, broj mobitela i adresa. Tako\u0111er, prikupljamo informacije o kola\u010di\u0107ima (cookies) potrebnim za rad web stranice i za pobolj\u0161anje korisni\u010dkog iskustva."
              }
            </div>
            <h5
              className={classNames(
                projectcss.all,
                projectcss.h5,
                projectcss.__wab_text,
                sty.h5__mX1G
              )}
            >
              {"Svrha obrade podataka"}
            </h5>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eHTyV
              )}
            >
              {
                "Va\u0161e podatke obra\u0111ujemo isklju\u010divo radi odgovora na va\u0161 upit i pru\u017eanja usluge animiranja."
              }
            </div>
            <h5
              className={classNames(
                projectcss.all,
                projectcss.h5,
                projectcss.__wab_text,
                sty.h5__sDBfz
              )}
            >
              {"Pravna osnova"}
            </h5>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__plzha
              )}
            >
              {
                "Podatke obra\u0111ujemo temeljem va\u0161e privole koju dajete slanjem upita putem kontakt forme."
              }
            </div>
            <h5
              className={classNames(
                projectcss.all,
                projectcss.h5,
                projectcss.__wab_text,
                sty.h5__d5WH
              )}
            >
              {"Primatelji podataka"}
            </h5>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__an8DV
              )}
            >
              {
                "Va\u0161e podatke ne dijelimo s tre\u0107im stranama, osim u slu\u010daju ako to zahtijeva zakon ili za\u0161tita na\u0161ih prava."
              }
            </div>
            <h5
              className={classNames(
                projectcss.all,
                projectcss.h5,
                projectcss.__wab_text,
                sty.h5__c9MNj
              )}
            >
              {"Rok \u010duvanja podataka"}
            </h5>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2Ltxm
              )}
            >
              {
                "Podatke \u010duvamo najdu\u017ee 6 mjeseci od zadnjeg kontakta, osim ako zakonski nije druga\u010dije propisano."
              }
            </div>
            <h5
              className={classNames(
                projectcss.all,
                projectcss.h5,
                projectcss.__wab_text,
                sty.h5__w3OeA
              )}
            >
              {"Va\u0161a prava"}
            </h5>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ziham
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "Imate pravo pristupa svojim osobnim podacima, ispravka, brisanja, kao i pravo podno\u0161enja pritu\u017ebe Agenciji za za\u0161titu osobnih podataka (AZOP).\n\nZa ostvarivanje svojih prava ili pitanja o privatnosti, kontaktirajte nas na:\n\n"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"E-mail:"}
                </span>
                <React.Fragment>
                  {" info@animatorica-princess-maddy.com"}
                </React.Fragment>
              </React.Fragment>
            </div>
          </section>
          <section
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__cHowJ)}
            >
              <div className={classNames(projectcss.all, sty.column__bbTdc)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__lzbLd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "50%"
                      : hasVariant(globalVariants, "screen", "tablet")
                      ? "100%"
                      : hasVariant(globalVariants, "screen", "smallDesktop")
                      ? "80%"
                      : "90%"
                  }
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/princess_maddy/images/princessMaddyLogoPng.png",
                    fullWidth: 1459,
                    fullHeight: 875,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__zV0Wl)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__mxZNb
                  )}
                >
                  {"Kontakt"}
                </h4>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__qsV9)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__suyt4)}
                  >
                    <Call24DpE8EaedFill1Wght400Grad0Opsz24SvgIcon
                      className={classNames(projectcss.all, sty.svg___7Xm8H)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ejLbm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__o1WJn
                      )}
                    >
                      {"099 736 1551"}
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__shqsi)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__vnMYu)}
                  >
                    <Mail24DpE8EaedFill1Wght400Grad0Opsz24SvgIcon
                      className={classNames(projectcss.all, sty.svg__epEQl)}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__lvxiU)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__iuzQ
                      )}
                      component={Link}
                      href={"mailto:info@animatorica-princess-maddy.com"}
                      platform={"nextjs"}
                    >
                      {hasVariant(globalVariants, "screen", "smallDesktop")
                        ? "info@animatorica-princess-maddy.com"
                        : "info@animatorica-princess-maddy.com"}
                    </PlasmicLink__>
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__ldX73)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__erPh
                  )}
                >
                  {"Stranice"}
                </h4>
                <PlasmicLink__
                  data-plasmic-name={"impressum"}
                  data-plasmic-override={overrides.impressum}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.impressum
                  )}
                  component={Link}
                  href={`/impressum`}
                  platform={"nextjs"}
                >
                  {hasVariant(globalVariants, "screen", "smallDesktop")
                    ? "Impressum"
                    : "Impressum"}
                </PlasmicLink__>
                <PlasmicLink__
                  data-plasmic-name={"politikaPrivatnosti"}
                  data-plasmic-override={overrides.politikaPrivatnosti}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.politikaPrivatnosti
                  )}
                  component={Link}
                  href={`/politika-privatnosti`}
                  platform={"nextjs"}
                >
                  {hasVariant(globalVariants, "screen", "smallDesktop")
                    ? "Politika privatnosti"
                    : "Politika privatnosti"}
                </PlasmicLink__>
              </div>
              <div className={classNames(projectcss.all, sty.column___7OtJu)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__j1KQa
                  )}
                >
                  {"Pratite me!"}
                </h4>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"freeBox"}
                  data-plasmic-override={overrides.freeBox}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox)}
                >
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___5OkEs
                    )}
                    component={Link}
                    href={
                      "https://www.instagram.com/princess____maddy?igsh=MW16NHV2cG01MDc1aA=="
                    }
                    platform={"nextjs"}
                    target={"_blank"}
                  >
                    <Instagram3SvgIcon
                      className={classNames(projectcss.all, sty.svg__uuHg0)}
                      role={"img"}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ofpQr
                    )}
                    component={Link}
                    href={"https://www.tiktok.com/@partyprincessmaddy"}
                    platform={"nextjs"}
                    target={"_blank"}
                  >
                    <TiktokSvgIcon
                      className={classNames(projectcss.all, sty.svg__tzrca)}
                      role={"img"}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___4Bsfx
                    )}
                    component={Link}
                    href={"https://www.facebook.com/share/16HpvQNQiQ/"}
                    platform={"nextjs"}
                    target={"_blank"}
                  >
                    <Facebook3SvgIcon
                      className={classNames(projectcss.all, sty.svg___7AuHv)}
                      role={"img"}
                    />
                  </PlasmicLink__>
                </Stack__>
              </div>
            </Stack__>
            <section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames(projectcss.all, sty.section)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__o6Dz
                )}
              >
                {"\u00a9 2025 Firefly. Sva prava pridr\u017eana. "}
              </div>
            </section>
          </section>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigacija",
    "izaberiteTemuVaseCarobneZabave",
    "h2",
    "footer",
    "impressum",
    "politikaPrivatnosti",
    "freeBox",
    "section"
  ],
  navigacija: ["navigacija"],
  izaberiteTemuVaseCarobneZabave: ["izaberiteTemuVaseCarobneZabave", "h2"],
  h2: ["h2"],
  footer: ["footer", "impressum", "politikaPrivatnosti", "freeBox", "section"],
  impressum: ["impressum"],
  politikaPrivatnosti: ["politikaPrivatnosti"],
  freeBox: ["freeBox"],
  section: ["section"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigacija: typeof NavigationBar;
  izaberiteTemuVaseCarobneZabave: "section";
  h2: "h2";
  footer: "section";
  impressum: "a";
  politikaPrivatnosti: "a";
  freeBox: "div";
  section: "section";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPolitikaPrivatnosti__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPolitikaPrivatnosti__VariantsArgs;
    args?: PlasmicPolitikaPrivatnosti__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPolitikaPrivatnosti__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPolitikaPrivatnosti__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPolitikaPrivatnosti__ArgProps,
          internalVariantPropNames: PlasmicPolitikaPrivatnosti__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPolitikaPrivatnosti__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPolitikaPrivatnosti";
  } else {
    func.displayName = `PlasmicPolitikaPrivatnosti.${nodeName}`;
  }
  return func;
}

export const PlasmicPolitikaPrivatnosti = Object.assign(
  // Top-level PlasmicPolitikaPrivatnosti renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigacija: makeNodeComponent("navigacija"),
    izaberiteTemuVaseCarobneZabave: makeNodeComponent(
      "izaberiteTemuVaseCarobneZabave"
    ),
    h2: makeNodeComponent("h2"),
    footer: makeNodeComponent("footer"),
    impressum: makeNodeComponent("impressum"),
    politikaPrivatnosti: makeNodeComponent("politikaPrivatnosti"),
    freeBox: makeNodeComponent("freeBox"),
    section: makeNodeComponent("section"),

    // Metadata about props expected for PlasmicPolitikaPrivatnosti
    internalVariantProps: PlasmicPolitikaPrivatnosti__VariantProps,
    internalArgProps: PlasmicPolitikaPrivatnosti__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc:
        "https://site-assets.plasmic.app/8c89dc573909044763af66cc0741fe2e.png",
      canonical: ""
    }
  }
);

export default PlasmicPolitikaPrivatnosti;
/* prettier-ignore-end */
